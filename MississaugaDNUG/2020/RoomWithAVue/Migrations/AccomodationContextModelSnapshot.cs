// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomWithAVue.Data;

namespace RoomWithAVue.Migrations
{
    [DbContext(typeof(AccomodationContext))]
    partial class AccomodationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoomWithAVue.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "123 Main Street",
                            CityTown = "Atlanta",
                            Country = "USA",
                            PostalCode = "12345",
                            StateProvince = "GA"
                        },
                        new
                        {
                            Id = 2,
                            AddressLine1 = "1000 Peachtree St.",
                            CityTown = "Atlanta",
                            Country = "USA",
                            PostalCode = "23456",
                            StateProvince = "GA"
                        });
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Contact = "Jake Smith",
                            Name = "ABC Products",
                            Phone = "(404) 555-3030"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Contact = "Tom Paul",
                            Name = "XYZ Supermarket",
                            Phone = "(770) 555-3030"
                        });
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Romatic room with view of downtown Atlanta",
                            MaxGuests = 2,
                            Rate = 149.0,
                            Title = "The Varsity"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Romatic room with view of downtown Atlanta",
                            MaxGuests = 3,
                            Rate = 199.0,
                            Title = "The Omni"
                        });
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.RoomImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Main Room",
                            RoomId = 1,
                            Url = "/img/varsity-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Couch",
                            RoomId = 1,
                            Url = "/img/varsity-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Bathroom",
                            RoomId = 1,
                            Url = "/img/varsity-3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Main Room",
                            RoomId = 2,
                            Url = "/img/omni-1.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Couch",
                            RoomId = 2,
                            Url = "/img/omni-2.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Bathroom",
                            RoomId = 2,
                            Url = "/img/omni-3.jpg"
                        });
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.Stay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Stays");
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.Customer", b =>
                {
                    b.HasOne("RoomWithAVue.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.RoomImage", b =>
                {
                    b.HasOne("RoomWithAVue.Data.Entities.Room", null)
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoomWithAVue.Data.Entities.Stay", b =>
                {
                    b.HasOne("RoomWithAVue.Data.Entities.Customer", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId");

                    b.HasOne("RoomWithAVue.Data.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
